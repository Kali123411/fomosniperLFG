export default [
  { inputs: [], stateMutability: "nonpayable", type: "constructor" },
  {
    inputs: [
      { internalType: "string", name: "allocationType", type: "string" },
    ],
    name: "ICOContract__AllocationPercentTooHigh",
    type: "error",
  },
  {
    inputs: [{ internalType: "string", name: "reason", type: "string" }],
    name: "ICOContract__BalanceError",
    type: "error",
  },
  { inputs: [], name: "ICOContract__ContributionTooLarge", type: "error" },
  { inputs: [], name: "ICOContract__ContributionTooSmall", type: "error" },
  {
    inputs: [],
    name: "ICOContract__CreatorTokensAlreadyClaimed",
    type: "error",
  },
  {
    inputs: [{ internalType: "string", name: "reason", type: "string" }],
    name: "ICOContract__InvalidAmount",
    type: "error",
  },
  {
    inputs: [
      { internalType: "address", name: "beneficiary", type: "address" },
      {
        internalType: "enum ICOContract.TokenClaimType",
        name: "attemptedType",
        type: "uint8",
      },
    ],
    name: "ICOContract__InvalidClaimType",
    type: "error",
  },
  {
    inputs: [{ internalType: "string", name: "reason", type: "string" }],
    name: "ICOContract__InvalidInput",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "enum ICOContract.State",
        name: "requiredState",
        type: "uint8",
      },
    ],
    name: "ICOContract__InvalidState",
    type: "error",
  },
  {
    inputs: [{ internalType: "address", name: "account", type: "address" }],
    name: "ICOContract__NotWhitelisted",
    type: "error",
  },
  { inputs: [], name: "ICOContract__NothingToClaim", type: "error" },
  { inputs: [], name: "ICOContract__NothingToReclaim", type: "error" },
  { inputs: [], name: "ICOContract__NothingToRefund", type: "error" },
  { inputs: [], name: "ICOContract__OnlyCreator", type: "error" },
  { inputs: [], name: "ICOContract__OnlyFactory", type: "error" },
  { inputs: [], name: "ICOContract__OnlyTreasury", type: "error" },
  {
    inputs: [{ internalType: "string", name: "reason", type: "string" }],
    name: "ICOContract__PaymentFailed",
    type: "error",
  },
  { inputs: [], name: "ICOContract__RefundFailed", type: "error" },
  {
    inputs: [{ internalType: "string", name: "reason", type: "string" }],
    name: "ICOContract__TimeError",
    type: "error",
  },
  {
    inputs: [{ internalType: "string", name: "reason", type: "string" }],
    name: "ICOContract__TransferFailed",
    type: "error",
  },
  { inputs: [], name: "ICOContract__TreasuryFeesNotPaid", type: "error" },
  { inputs: [], name: "ICOContract__WhitelistActive", type: "error" },
  { inputs: [], name: "ICOContract__WhitelistNotActive", type: "error" },
  { inputs: [], name: "InvalidInitialization", type: "error" },
  { inputs: [], name: "NotInitializing", type: "error" },
  { inputs: [], name: "ReentrancyGuardReentrantCall", type: "error" },
  {
    inputs: [{ internalType: "address", name: "token", type: "address" }],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beneficiary",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountPaid",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokensAllocated",
        type: "uint256",
      },
    ],
    name: "Contribution",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReleased",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalShare",
        type: "uint256",
      },
    ],
    name: "CreatorTokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "intended",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "actual",
        type: "uint256",
      },
      { indexed: false, internalType: "uint256", name: "fee", type: "uint256" },
    ],
    name: "FeeOnTransferDetected",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum ICOContract.State",
        name: "newState",
        type: "uint8",
      },
    ],
    name: "ICOStateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "PartnerTreasuryFundingFeePaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
    ],
    name: "PreAllocatedFundingClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountClaimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalReleased",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalAllocation",
        type: "uint256",
      },
    ],
    name: "PreAllocatedTokensClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contributor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountRefunded",
        type: "uint256",
      },
    ],
    name: "Refunded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountReclaimed",
        type: "uint256",
      },
    ],
    name: "TokensReclaimedOnFailure",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "TreasuryFundingFeePaid",
    type: "event",
  },
  { anonymous: false, inputs: [], name: "WhitelistActivated", type: "event" },
  { anonymous: false, inputs: [], name: "WhitelistDeactivated", type: "event" },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistedAddressAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "WhitelistedAddressRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "WhitelistedAddressesAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
    ],
    name: "WhitelistedAddressesRemoved",
    type: "event",
  },
  {
    inputs: [],
    name: "activate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "activateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "_accounts", type: "address[]" },
    ],
    name: "addManyToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_account", type: "address" }],
    name: "addToWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bannerCid",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "claimPreAllocatedFunding",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum ICOContract.TokenClaimType",
        name: "_claimType",
        type: "uint8",
      },
    ],
    name: "claimTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "claimedFundingAllocations",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "_amount", type: "uint256" },
      { internalType: "bool", name: "_isNative", type: "bool" },
    ],
    name: "contribute",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "contributions",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "contributorTokensClaimed",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creator",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "creatorTokensClaimed",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "creatorTokensReleased",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "currentState",
    outputs: [
      { internalType: "enum ICOContract.State", name: "", type: "uint8" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deactivateWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "discord",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "docs",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "endTime",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fullDescription",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "fundingAllocationPercentages",
    outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fundraisingCurrency",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address", name: "_beneficiary", type: "address" },
    ],
    name: "getClaimableAmount",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getRemainingTokens",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getStartTime",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getState",
    outputs: [
      { internalType: "enum ICOContract.State", name: "", type: "uint8" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenSoldAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalTokensForSale",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "beneficiary", type: "address" }],
    name: "getVestingStatus",
    outputs: [
      { internalType: "uint256", name: "totalAllocation", type: "uint256" },
      { internalType: "uint256", name: "totalVested", type: "uint256" },
      { internalType: "uint256", name: "totalReleased", type: "uint256" },
      { internalType: "uint256", name: "claimableNow", type: "uint256" },
      { internalType: "bool", name: "vestingEnabledFlag", type: "bool" },
      { internalType: "uint64", name: "vestingStartTimestamp", type: "uint64" },
      {
        internalType: "uint64",
        name: "vestingCliffEndTimestamp",
        type: "uint64",
      },
      { internalType: "uint64", name: "vestingEndTimestamp", type: "uint64" },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "hardCap",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          { internalType: "string", name: "tokenName", type: "string" },
          { internalType: "string", name: "tokenSymbol", type: "string" },
          {
            internalType: "uint256",
            name: "tokenTotalSupply",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "fundraisingCurrency",
            type: "address",
          },
          { internalType: "uint256", name: "softCap", type: "uint256" },
          { internalType: "uint256", name: "hardCap", type: "uint256" },
          { internalType: "uint64", name: "startTime", type: "uint64" },
          { internalType: "uint64", name: "endTime", type: "uint64" },
          { internalType: "uint256", name: "minContribution", type: "uint256" },
          { internalType: "uint256", name: "maxContribution", type: "uint256" },
          {
            components: [
              { internalType: "address", name: "recipient", type: "address" },
              { internalType: "uint16", name: "percentageBps", type: "uint16" },
              { internalType: "bool", name: "vestingEnabled", type: "bool" },
              { internalType: "string", name: "label", type: "string" },
            ],
            internalType: "struct IICOStructs.Allocation[]",
            name: "tokenPreAllocations",
            type: "tuple[]",
          },
          {
            components: [
              { internalType: "address", name: "recipient", type: "address" },
              { internalType: "uint16", name: "percentageBps", type: "uint16" },
              { internalType: "bool", name: "vestingEnabled", type: "bool" },
              { internalType: "string", name: "label", type: "string" },
            ],
            internalType: "struct IICOStructs.Allocation[]",
            name: "fundingCurrencyAllocations",
            type: "tuple[]",
          },
          {
            internalType: "uint64",
            name: "vestingCliffDuration",
            type: "uint64",
          },
          {
            internalType: "uint64",
            name: "vestingTotalDuration",
            type: "uint64",
          },
          {
            internalType: "uint16",
            name: "vestingInitialUnlockBps",
            type: "uint16",
          },
          { internalType: "bool", name: "creatorVestingEnabled", type: "bool" },
          {
            internalType: "uint16",
            name: "treasuryFundingFeeBps",
            type: "uint16",
          },
          {
            components: [
              {
                internalType: "string",
                name: "shortDescription",
                type: "string",
              },
              {
                internalType: "string",
                name: "fullDescription",
                type: "string",
              },
              { internalType: "string", name: "twitter", type: "string" },
              { internalType: "string", name: "telegram", type: "string" },
              { internalType: "string", name: "website", type: "string" },
              { internalType: "string", name: "discord", type: "string" },
              { internalType: "string", name: "docs", type: "string" },
              { internalType: "string", name: "logoCid", type: "string" },
              { internalType: "string", name: "bannerCid", type: "string" },
            ],
            internalType: "struct IICOStructs.DescriptiveLinks",
            name: "links",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "initialWhitelistActive",
            type: "bool",
          },
        ],
        internalType: "struct IICOStructs.ICOConfig",
        name: "_config",
        type: "tuple",
      },
      { internalType: "address", name: "_creator", type: "address" },
      { internalType: "address", name: "_factory", type: "address" },
      { internalType: "address", name: "_newTokenAddress", type: "address" },
      { internalType: "address", name: "_treasuryAddress", type: "address" },
      {
        internalType: "address",
        name: "_partnerTreasuryAddress",
        type: "address",
      },
      { internalType: "bool", name: "_initialWhitelistActive", type: "bool" },
      {
        internalType: "address[]",
        name: "_whitelistedAddresses",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "isWhitelisted",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "logoCid",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxContribution",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minContribution",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "partnerTreasuryAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "preAllocatedTokensReleased",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reclaimTokensOnFailure",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "refund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "_account", type: "address" }],
    name: "removeFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "address[]", name: "_accounts", type: "address[]" },
    ],
    name: "removeManyFromWhitelist",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "shortDescription",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "softCap",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "startTime",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "telegram",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "tokenAllocationAmounts",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "tokenAllocations",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPrice",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenSold",
    outputs: [{ internalType: "contract IERC20", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenTotalSupply",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokensAvailableForSale",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalExplicitFundingBps",
    outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalRaised",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokensAllocated",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTokensPreAllocated",
    outputs: [{ internalType: "uint256", name: "", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryAddress",
    outputs: [{ internalType: "address", name: "", type: "address" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryFeesPaid",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasuryFundingFeeBps",
    outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "twitter",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingCliffDuration",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "address", name: "", type: "address" }],
    name: "vestingEnabled",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingInitialUnlockBps",
    outputs: [{ internalType: "uint16", name: "", type: "uint16" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingStartTime",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingTotalDuration",
    outputs: [{ internalType: "uint64", name: "", type: "uint64" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "website",
    outputs: [{ internalType: "string", name: "", type: "string" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistActive",
    outputs: [{ internalType: "bool", name: "", type: "bool" }],
    stateMutability: "view",
    type: "function",
  },
] as const;
